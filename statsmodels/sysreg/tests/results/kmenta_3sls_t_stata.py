import numpy as np

est = dict(
           k_autoCns = 0,
           cons_1 = 1,
           F_1 = 29.47913911612589,
           p_1 = 4.53138844437e-08,
           df_m1 = 2,
           rss_1 = 66.18567893085752,
           mss_1 = 201.9286202691422,
           rmse_1 = 1.973138421709666,
           r2_1 = .7531437930451954,
           cons_2 = 1,
           F_2 = 12.78594194831496,
           p_2 = .0000104734650146,
           df_m2 = 3,
           rss_2 = 103.5498935081832,
           mss_2 = 164.5644056918166,
           rmse_2 = 2.543986702846823,
           r2_2 = .6137845172109221,
           k_eform = 2,
           k = 7,
           df_r = 33,
           rank = 7,
           ll = -51.62174114428608,
           dfk2_adj = 20,
           k_eq = 2,
           N = 20,
           ic = 0,
           cmd = "reg3",
           cmdline = "reg3 (consump price income) (consump price farmprice trend),  small",
           method = "3sls",
           marginsok = "XB default",
           marginsnotok = "stdp Residuals stddp",
           predict = "reg3_p",
           small = "small",
           corr = "unstructured",
           endog = "consump",
           exog = "price income farmprice trend",
           depvar = "consump consump",
           eqnames = "consump 2consump",
           properties = "b V",
          )

params_table = np.array([-.27133327948427,
                          .08160133521096,
                         -3.3251083304313,
                           .0021747789087,
                         -.43735244426326,
                         -.10531411470529,
                                       33,
                          2.0345152974493,
                                        0,
                          .29487911996769,
                          .03867170865041,
                          7.6251898418397,
                          8.916968610e-09,
                          .21620093713992,
                          .37355730279545,
                                       33,
                          2.0345152974493,
                                        0,
                          99.275661881365,
                          6.9279828725106,
                          14.329663295687,
                          1.003541286e-15,
                          85.180574746775,
                          113.37074901595,
                                       33,
                          2.0345152974493,
                                        0,
                          .14614674322289,
                          .08446531871398,
                          1.7302574056196,
                          .09292770366836,
                         -.02569923980464,
                          .31799272625041,
                                       33,
                          2.0345152974493,
                                        0,
                          .21214287287447,
                          .03565936902057,
                          5.9491482519535,
                          1.120404932e-06,
                          .13959334110474,
                           .2846924046442,
                                       33,
                          2.0345152974493,
                                        0,
                          .33221168082076,
                          .06074168982451,
                          5.4692531897049,
                          4.616693679e-06,
                          .20863178367987,
                          .45579157796164,
                                       33,
                          2.0345152974493,
                                        0,
                          62.294213842137,
                          9.9109599376924,
                          6.2853865048153,
                          4.175522012e-07,
                          42.130214236494,
                          82.458213447779,
                                       33,
                          2.0345152974493,
                                        0]).reshape(7,9)

params_table_colnames = 'b se t pvalue ll ul df crit eform'.split()

params_table_rownames = 'price income _cons price farmprice trend _cons'.split()

cov = np.array([ .00665877790821,
                -.00169144736805,
                -.50102932149765,
                 .00458748091093,
                -.00132691865685,
                -.00201571676077,
                -.30945694139826,
                -.00169144736805,
                 .00149550104994,
                 .02331326397112,
                 .00046433530506,
                 .00117320129612,
                 .00178220534027,
                -.17851610740372,
                -.50102932149765,
                 .02331326397112,
                   47.9969466818,
                -.50412442658362,
                 .01828895506873,
                 .02778267761831,
                 48.533729173117,
                 .00458748091093,
                 .00046433530506,
                -.50412442658362,
                 .00713439006545,
                 .00050322001211,
                 .00063929963117,
                -.76891119647379,
                -.00132691865685,
                 .00117320129612,
                 .01828895506873,
                 .00050322001211,
                 .00127159059894,
                 .00161471567665,
                -.19015354378036,
                -.00201571676077,
                 .00178220534027,
                 .02778267761831,
                 .00063929963117,
                 .00161471567665,
                 .00368955288274,
                -.25870434930081,
                -.30945694139826,
                -.17851610740372,
                 48.533729173117,
                -.76891119647379,
                -.19015354378036,
                -.25870434930081,
                 98.227126886544]).reshape(7,7)

cov_colnames = 'price income _cons price farmprice trend _cons'.split()

cov_rownames = 'price income _cons price farmprice trend _cons'.split()

class Bunch(dict):
    def __init__(self, **kw):
        dict.__init__(self, kw)
        self.__dict__  = self

        for i,att in enumerate(['params', 'bse', 'tvalues', 'pvalues']):
            self[att] = self.params_table[:,i]


results = Bunch(
                params_table=params_table,
                params_table_colnames=params_table_colnames,
                params_table_rownames=params_table_rownames,
                cov=cov,
                cov_colnames=cov_colnames,
                cov_rownames=cov_rownames,
                **est
                )

